CREATE TABLE customers (
    customer_id integer PRIMARY KEY,
    first_name varchar(100),
    last_name varchar(100),
    email varchar(100)
);

CREATE TABLE products (
    product_id integer PRIMARY KEY,
    product_name varchar(100),
    price decimal
);

CREATE TABLE orders (
    order_id integer PRIMARY KEY,
    customer_id integer,
    order_date date
);

CREATE TABLE order_items (
    order_id integer,
    product_id integer,
    quantity integer
);

INSERT INTO customers (customer_id, first_name, last_name, email) VALUES
(1, 'John', 'Doe', 'johndoe@email.com'),
(2, 'Jane', 'Smith', 'janesmith@email.com'),
(3, 'Bob', 'Johnson', 'bobjohnson@email.com'),
(4, 'Alice', 'Brown', 'alicebrown@email.com'),
(5, 'Charlie', 'Davis', 'charliedavis@email.com'),
(6, 'Eva', 'Fisher', 'evafisher@email.com'),
(7, 'George', 'Harris', 'georgeharris@email.com'),
(8, 'Ivy', 'Jones', 'ivyjones@email.com'),
(9, 'Kevin', 'Miller', 'kevinmiller@email.com'),
(10, 'Lily', 'Nelson', 'lilynelson@email.com'),
(11, 'Oliver', 'Patterson', 'oliverpatterson@email.com'),
(12, 'Quinn', 'Roberts', 'quinnroberts@email.com'),
(13, 'Sophia', 'Thomas', 'sophiathomas@email.com');

INSERT INTO products (product_id, product_name, price) VALUES
(1, 'Product A', 10.00),
(2, 'Product B', 15.00),
(3, 'Product C', 20.00),
(4, 'Product D', 25.00),
(5, 'Product E', 30.00),
(6, 'Product F', 35.00),
(7, 'Product G', 40.00),
(8, 'Product H', 45.00),
(9, 'Product I', 50.00),
(10, 'Product J', 55.00),
(11, 'Product K', 60.00),
(12, 'Product L', 65.00),
(13, 'Product M', 70.00);

INSERT INTO orders (order_id, customer_id, order_date) VALUES
(1, 1, '2023-05-01'),
(2, 2, '2023-05-02'),
(3, 3, '2023-05-03'),
(4, 1, '2023-05-04'),
(5, 2, '2023-05-05'),
(6, 3, '2023-05-06'),
(7, 4, '2023-05-07'),
(8, 5, '2023-05-08'),
(9, 6, '2023-05-09'),
(10, 7, '2023-05-10'),
(11, 8, '2023-05-11'),
(12, 9, '2023-05-12'),
(13, 10, '2023-05-13'),
(14, 11, '2023-05-14'),
(15, 12, '2023-05-15'),
(16, 13, '2023-05-16');

INSERT INTO order_items (order_id, product_id, quantity) VALUES
(1, 1, 2),
(1, 2, 1),
(2, 2, 1),
(2, 3, 3),
(3, 1, 1),
(3, 3, 2),
(4, 2, 4),
(4, 3, 1),
(5, 1, 1),
(5, 3, 2),
(6, 2, 3),
(6, 1, 1),
(7, 4, 1),
(7, 5, 2),
(8, 6, 3),
(8, 7, 1),
(9, 8, 2),
(9, 9, 1),
(10, 10, 3),
(10, 11, 2),
(11, 12, 1),
(11, 13, 3),
(12, 4, 2),
(12, 5, 1),
(13, 6, 3),
(13, 7, 2),
(14, 8, 1),
(14, 9, 2),
(15, 10, 3),
(15, 11, 1),
(16, 12, 2),
(16, 13, 3);

select *
from orders;
select *
from order_items;
select *
from customers;
select *
from products;

--Q1 Select the product with maximum price
with max_price as(
select max(price) 
from products
)
select a.product_name
from products as a
join
max_price as b
on a.price=b.max;

--Q2 Which customer made most number of orders.
with 
count_orders as(
select b.first_name||' '||b.last_name as name,count(a.order_id) as number_of_orders
from orders as a 
join
customers as b
on a.customer_id=b.customer_id
group by b.first_name,b.last_name
order by count(a.order_id) desc
),max_orders as (
select max(number_of_orders)
from count_orders
)
select a.name
from count_orders as a
join
max_orders as b
on a.number_of_orders=b.max;

--Q3 Calculate the total revenue per product

select a.product_name,a.price,sum(b.quantity),sum(a.price*b.quantity) as revenue
from products as a
join 
order_items as b
on a.product_id=b.product_id
join orders as c
on b.order_id=c.order_id
group by a.product_name,a.price;

--Q4 Find the day with highest revenue
with 
revenue as (
select a.order_date,sum(c.price*b.quantity) as rev
from orders as a 
join
order_items as b
on a.order_id=b.order_id
join products as c
on b.product_id=c.product_id
group by a.order_date
),
max_rev as (
select max(rev)
from revenue
)
select a.order_date,a.rev
from revenue as a 
join
max_rev as b
on a.rev=b.max;

--Q5 Top 3 customers to have ordered the most distinct products
with 
order_distinct as (
select a.customer_id,b.first_name||' '||b.last_name as name,count(distinct c.product_id) as no_of_distinct_prod
from orders as a
join customers as b
on a.customer_id=b.customer_id
join order_items as c
on a.order_id=c.order_id
group by b.first_name,b.last_name,a.customer_id
),
max_distinct as(
select max(no_of_distinct_prod)
from order_distinct
)
select a.customer_id,a.name,a.no_of_distinct_prod
from order_distinct as a
join max_distinct as b
on a.no_of_distinct_prod=b.max;

--Q6 Which product is bought least in terms of quantity
with qty as(
	select a.product_name,sum(b.quantity)
    from products as a
    join
    order_items as b
    on a.product_id=b.product_id
    group by a.product_name
    order by sum ),
min_qty as(
	select min(sum) from qty
	)
select a.product_name,b.min
from qty as a
join min_qty as b on a.sum=b.min;

--Q7 What is median order total

with order_total as (
select a.order_id,sum(a.quantity*b.price) as order_tot
from order_items as a
join
products as b
on a.product_id=b.product_id
group by a.order_id
)
select percentile_cont(0.5) within group(order by a.order_tot) as median
from order_total as a 

--Q8 For each order determine if it was expensive(over 300),afforable(over 100) or cheap
with order_total as (
select a.order_id,sum(a.quantity*b.price) as order_tot
from order_items as a
join
products as b
on a.product_id=b.product_id
group by a.order_id
)
select a.order_id,
case 
when a.order_tot>300 then 'Expensive'
when a.order_tot>100 then 'Affordable'
else 'Cheap'
end as status
from order_total as a 
order by a.order_tot desc;

--Q9 Find customers who ordered product with highest price
with 
max_price as (
select max(a.price)
from products as a
),
max_price_id as (
select a.product_id 
from products as a
join max_price as b
on a.price=b.max
)
select c.customer_id,c.first_name||' '||c.last_name as name
from order_items as a
join max_price_id as b
on a.product_id=b.product_id
join orders as d
on a.order_id=d.order_id
join customers as c
on d.customer_id=c.customer_id
group by c.customer_id;

